Task list:

1. Implement constructor Mike::UserInterfaceLinked::UserInterfaceLinked() - make it so that it creates something like UserInterface
2. Make the callbacks simpler
3. Delete unused buttons


in Control.cpp:

//WIDGETTABLE:
/*
Call sequence is as follows:
1. user presses button inside WidTableBase.cpp
2. this calls void WidTableBase::button_cb(Fl_Widget *w, void * p)
3. which calls virtual void WidTableBase::virtButtonCb(Fl_Widget *w, void * p) - this is an empty function which needs to be implemented in derived classes - in WidgetTable.ccp - void WidgetTable::virtButtonCb(Fl_Widget * w, void * p) which: determines what button was pressed, at what price, and sends this info to:
4. virtual void UserInterfaceBase::callbkWidTable(int rowPressed, int colPressed, long price) which: determines what type of button was pressed, gets the value of the order from Fl_Input which is part of UserInterfaceBase, and send callback to virtual function implemented in derived classes. In this case:
5. virtual void UserInterface::sendWidTableCallback(int rowPressed, int colPressed, long price, MikeOrderType tempOrderType, int orderSize) which calls:
6. void Control::callbkWidTable(int row, int col, long price, MikeOrderType OrderTypePressed, int orderSize)

SUGGESTION - implement:

5. virtual UserInterfaceLinked::sendWidTableCallback in such a way that it calls positions directly in IntegratorPosUI
*/