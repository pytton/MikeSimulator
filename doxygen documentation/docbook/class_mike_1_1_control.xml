<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="class_mike_1_1_control">
<title>Mike::Control class Reference</title>
<para>
    <programlisting>#include <link linkend="_control_8h">&lt;Control.h&gt;</link></programlisting>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef <link linkend="class_fluid_price_control_u_i">FluidPriceControlUI</link>  <link linkend="class_mike_1_1_control_1addbe39ef40982f0a4002b6f74091a799">DataUI</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef <link linkend="class_fluid_control_interface">FluidControlInterface</link>  <link linkend="class_mike_1_1_control_1aba56a17e2d16d087731d215476fff47d">ControlUI</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool flagStopMainLoop</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool mainLoopRunning</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool mainLoopfinished</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>DataUI * dataControlWindow</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ControlUI * controlWindow</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_mike_1_1_control_1ac9a2e3b56773b1eadab7297327a9fbcc">Control</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="class_mike_1_1_control_1aa3395e0509ab5b980732ab0e3a29ce4d">~Control</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1aa26389eedd6e1c60fa64fe7883ce6ce8">stoploop</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="class_mike_1_1_control_1ae34c60ef30c2de2332df13b644c7791f">startloop</link> (
void * ptrControlPointer)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1a3440083f03f7da3d4490fa44bc13d62b">mainloop</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1a887652b2503a6e881fcceca36f0a0af9">processData</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1ad06eaf996f971a758eea1fd55eda2565">processUserInput</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1a2f239c6bace6fba6d31d54919b7ee6e1">printoutAll</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="class_mike_1_1_control_1acf3d41cb5dd54a2ee31cfb0709a79e7e">processAlgos</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="class_mike_1_1_control_1ac627d3cc73f39181fbfabfa01eb47f85">mainloopTimeoutCallbackFLTK</link> (
void * ptrControlPointer)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
            <section xml:id="class_mike_1_1_control_1addbe39ef40982f0a4002b6f74091a799">
                <title>typedef FluidPriceControlUI Mike::Control::DataUI</title> <emphasis></emphasis>
                
<para>DataUI is a window handling the Data class </para>

            </section>
            <section xml:id="class_mike_1_1_control_1aba56a17e2d16d087731d215476fff47d">
                <title>typedef FluidControlInterface Mike::Control::ControlUI</title> <emphasis></emphasis>
                
<para>ControlUI is a window handling the <link linkend="class_mike_1_1_control">Control</link> class </para>

            </section>
        <section>
            <title>Member Data Documentation</title>
            <simplesect>
                <title>bool Mike::Control::flagStopMainLoop</title>                
<para>used internally by mainloopTimeoutCallbackFLTK, startloop and stoploop </para>

                <para>Definition at line 41 of file Control.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Control.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>bool Mike::Control::mainLoopRunning</title>                
<para>&apos;Thread guard&apos; used by mainloopTimeoutCallbackFLTK, startloop and stoploop </para>

                <para>Definition at line 43 of file Control.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Control.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>bool Mike::Control::mainLoopfinished</title>                
<para>this a &apos;thread guard&apos; for the Fl::add_timeout function timeoutfunction - to ensure that another run of the MainLoop is not initiated before the MainLoop is finished processing </para>

                <para>Definition at line 45 of file Control.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Control.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>DataUI* Mike::Control::dataControlWindow</title>                
<para>DataUI is a User Interface Window used to control everything associated with market price data. This is designed to grow. Market price data can be either pulled from Interactive Brokers using Jan Boonen&apos;s library or it can be switched to &apos;manual&apos; to explore behaviour of algos. </para>

                <para>Definition at line 61 of file Control.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Control.h</para></listitem></itemizedlist></para>
            </simplesect>
            <simplesect>
                <title>ControlUI* Mike::Control::controlWindow</title>                
<para>This window is for controlling the <link linkend="class_mike_1_1_control">Control</link> class </para>

                <para>Definition at line 63 of file Control.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>Control.h</para></listitem></itemizedlist></para>
            </simplesect>
        </section>
            <section xml:id="class_mike_1_1_control_1ac9a2e3b56773b1eadab7297327a9fbcc">
                <title>Mike::Control::Control ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_mike_1_1_control_1aa3395e0509ab5b980732ab0e3a29ce4d">
                <title>Mike::Control::~Control ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="class_mike_1_1_control_1aa26389eedd6e1c60fa64fe7883ce6ce8">
                <title>void Mike::Control::stoploop ()</title> <emphasis></emphasis>
                
<para>Use this to pause execution of the program. Stops looping the MainLoop function </para>

            </section>
            <section xml:id="class_mike_1_1_control_1ae34c60ef30c2de2332df13b644c7791f">
                <title>void Mike::Control::startloop (void *ptrControlPointer)</title> <emphasis></emphasis>
                
<para>This is how you start the program. Starts looping the MainLoop function. void pointer has to be of <link linkend="class_mike_1_1_control">Control</link> type </para>

            </section>
            <section xml:id="class_mike_1_1_control_1a3440083f03f7da3d4490fa44bc13d62b">
                <title>void Mike::Control::mainloop ()</title> <emphasis></emphasis>
                
<para>The core of the program. This function runs in a continous loop and handles all events. Everything that happens is handled by functions inside this loop. </para>

            </section>
            <section xml:id="class_mike_1_1_control_1a887652b2503a6e881fcceca36f0a0af9">
                <title>void Mike::Control::processData ()</title> <emphasis></emphasis>
                
<para>Handles all events related to market data </para>

            </section>
            <section xml:id="class_mike_1_1_control_1ad06eaf996f971a758eea1fd55eda2565">
                <title>void Mike::Control::processUserInput ()</title> <emphasis></emphasis>
                
<para>All user interactions with graphical user interfaces handled here </para>

            </section>
            <section xml:id="class_mike_1_1_control_1a2f239c6bace6fba6d31d54919b7ee6e1">
                <title>void Mike::Control::printoutAll ()</title> <emphasis></emphasis>
                
<para>Printing out all information to user interfaces handled here </para>

            </section>
            <section xml:id="class_mike_1_1_control_1acf3d41cb5dd54a2ee31cfb0709a79e7e">
                <title>void Mike::Control::processAlgos ()</title> <emphasis></emphasis>
                
<para>Handles all algo events (checkfills, make decisions, place/modify/cancel orders </para>

            </section>
            <section xml:id="class_mike_1_1_control_1ac627d3cc73f39181fbfabfa01eb47f85">
                <title>void Mike::Control::mainloopTimeoutCallbackFLTK (void *ptrControlPointer)</title> <emphasis></emphasis>
                
<para>Makes the <link linkend="class_mike_1_1_control_1a3440083f03f7da3d4490fa44bc13d62b">mainloop()</link> function loop continously in intervals set by SET_MAINLOOP_INTERVAL. Has to be static per FLTK. </para>

            </section>
</section>
